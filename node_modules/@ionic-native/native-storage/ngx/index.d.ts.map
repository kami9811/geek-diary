{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { IonicNativePlugin } from '@ionic-native/core';\n/**\n * @name Native Storage\n * @premier nativestorage\n * @description Native storage of variables in Android and iOS\n *\n * @usage\n * ```typescript\n * import { NativeStorage } from '@ionic-native/native-storage/ngx';\n *\n * constructor(private nativeStorage: NativeStorage) { }\n *\n * ...\n *\n * this.nativeStorage.setItem('myitem', {property: 'value', anotherProperty: 'anotherValue'})\n *   .then(\n *     () => console.log('Stored item!'),\n *     error => console.error('Error storing item', error)\n *   );\n *\n * this.nativeStorage.getItem('myitem')\n *   .then(\n *     data => console.log(data),\n *     error => console.error(error)\n *   );\n * ```\n */\nexport declare class NativeStorage extends IonicNativePlugin {\n    /**\n     * Initialises shared storage with the suite name when using app groups in iOS\n     * @param reference {string}\n     * @returns {Promise<void>}\n     */\n    initWithSuiteName(reference: string): Promise<void>;\n    /**\n     * Stores a value\n     * @param reference {string}\n     * @param value\n     * @returns {Promise<any>}\n     */\n    setItem(reference: string, value: any): Promise<any>;\n    /**\n     * Gets a stored item\n     * @param reference {string}\n     * @returns {Promise<any>}\n     */\n    getItem(reference: string): Promise<any>;\n    /**\n     * Retrieving all keys\n     * @returns {Promise<any>}\n     */\n    keys(): Promise<any>;\n    /**\n     * Removes a single stored item\n     * @param reference {string}\n     * @returns {Promise<any>}\n     */\n    remove(reference: string): Promise<any>;\n    /**\n     * Removes all stored values.\n     * @returns {Promise<any>}\n     */\n    clear(): Promise<any>;\n}\n"]}